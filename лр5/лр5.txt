using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp5
{
    class Transport
    {
        public string sredstvo;
        public Transport(string a)
        {
            sredstvo = a;
        }
        public virtual string ToString(Transport obj )
        {
            string n="ok";
            Console.WriteLine("Транспортное средство: " + obj.sredstvo);
            return n;
        }


    }
    interface IAvto { string ToString(Avto obj);
             string Ravno(Avto obj1, Avto obj2); }
    class Avto: Transport
    {
        public string marka;
        public int nomer;
        public Avto(string a, string b, int c) :base(a)
        {
            sredstvo = a;
            marka = b;
            nomer = c;
        }
       public virtual string ToString(Avto obj)
        {
            string n = "ok";
            Console.WriteLine("Транспортное средство: " + obj.sredstvo + ", Марка: "+ obj.marka + ", Номер " +obj.nomer );
            return n;
        }
        public virtual string Ravno(Avto obj1, Avto obj2){
            string n = "ok";
            if(obj1.nomer==obj2.nomer & obj1.marka==obj2.marka) Console.WriteLine("Это одна и та же машина "); else Console.WriteLine("Это разные машины ");
            return n;
        }
    }


    interface IPoezd
    {
        string ToString(Poezd obj);
        string Bysto(Poezd obj1, Poezd obj2);
    }
    class Poezd : Transport,IPoezd
    {
        public string nachalo;
        public string konets;
        public double otprav;
        public double prib;
        public double vrema;
        public Poezd(string a, string b, string e, double c, double d, double f) :base(a)
        {
            sredstvo =  a;
            nachalo = b;
            konets = e;
            otprav = c;
            prib = d;
            vrema = f;
        }
        public virtual string ToString(Poezd obj)
        {
            string n = "ok";
            Console.WriteLine("Транспортное средство: " + obj.sredstvo + ", Пункт отправления: " + obj.nachalo + ", Пункт прибытия " + obj.konets + ", Время отправления "+obj.otprav + ", Время прибытия " + obj.prib + ", Время в пути " + obj.vrema);
            return n;
        }
        public virtual string Bysto(Poezd obj1, Poezd obj2)
        {
            string n = "ok";
            if (obj1.nachalo == obj2.nachalo & obj1.konets == obj2.konets) { if (obj1.vrema > obj2.vrema) Console.WriteLine("Первый поезд быстрее "); else Console.WriteLine("Второй поезд быстрее "); } else Console.WriteLine("Поезда идут по разному маршруту ");
            return n;

        }


    }
    interface IEkspress
    {
        string ToString(Poezd obj);
        string Bysto(Ekspress obj1, Ekspress obj2);
    }
    class Ekspress : Poezd, IEkspress
    {
        public Ekspress(string a, string b, string e, double c, double d, double f): base(a,b,e,c,d,f)
        {
            sredstvo = a;
            nachalo = b;
            konets = e;
            otprav = c;
            prib = d;
            vrema = f;
        }
        public override string ToString(Poezd obj) 
        {
            string n = "ok";
            Console.WriteLine("Транспортное средство: " + obj.sredstvo + ", Пункт отправления: " + obj.nachalo + ", Пункт прибытия " + obj.konets + ", Время отправления " + obj.otprav + ", Время прибытия " + obj.prib + ", Время в пути " + obj.vrema);
            return n;
        }
        public virtual string Bysto(Ekspress obj1, Ekspress obj2)
        {
            string n = "ok";
            if (obj1.nachalo == obj2.nachalo & obj1.konets == obj2.konets) { if (obj1.vrema > obj2.vrema) Console.WriteLine("Первый поезд быстрее "); else Console.WriteLine("Второй поезд быстрее "); } else Console.WriteLine("Поезда идут по разному маршруту ");
            return n;

        }


    }
    interface IVagon {
        string ToString(Vagon obj);
        bool Equals(int a, int b);
           }
    class Vagon : IVagon          
    {
        public int nomber;
        
        public Vagon(int a)
        {
            nomber = a;
        }
        public virtual string ToString(Vagon obj)
        {
            string n = "ok";
            Console.WriteLine("Номер вагона: " + obj.nomber);
            return n;
        }
        public virtual bool Equals(int a, int b)
        {
            bool n = true;
            if (a == b) Console.WriteLine("Это один и тот же вагон "); else Console.WriteLine("Это разные вагоны ");
            return n;
        }

    }

    abstract class Dvigatel//sealed - бесплодный
    {
        public string type;
        public Dvigatel(string a)
        {
            type = a;
        }
        public virtual string ToString(Dvigatel obj)
        {
            string n = "ok";
            Console.WriteLine("Марка двигателя: " + obj.type);
            return n;
        }
    }

    class Printer
        {
        public virtual string IAmPrinting(IPoezd someobj)
            {
            string n = "ok";
            someobj.ToString();
            Console.WriteLine(someobj.GetType());
            return n;
            }
        }

    class Program//Автомобиль, Поезд, Транспортное средство, Экспресс, Двигатель, Вагон.
    {
        static void Main(string[] args)
        {
            Transport ras = new Transport("Машина");
            ras.ToString(ras);
            Avto dva = new Avto("Машина", "Ауди", 123);
            dva.ToString(dva);
            Poezd tri = new Poezd("Поезд","Минск","Москва",13,22,9);
            Ekspress four = new Ekspress("Поезд", "Минск", "Москва", 13.15, 22.30, 9.15);
            tri = four as Poezd;
            if (tri != null) Console.WriteLine("Преобразование прошло успешно");   else  Console.WriteLine("Ошибка при преобразовании");
            Vagon five = new Vagon(6);
            IVagon six = new Vagon(5);
            six.Equals(five.nomber, 9);

            Ekspress seven = new Ekspress("Поезд", "Минск", "Москва", 16.15, 6.20, 10.05);
            Poezd eith = new Poezd("Поезд", "Минск", "Санкт-Петербург", 16.15, 8.15, 12.00);
            seven.Bysto(four,seven);
            eith.Bysto(tri, eith);
            object[] A = new object[5];
            IPoezd s; IPoezd v;
            s = eith;
            v = tri;
            A[0] = eith;
            A[1] = tri;
            Printer nine = new Printer();
            nine.IAmPrinting(eith);
            nine.IAmPrinting(tri);
        }
    }
}
